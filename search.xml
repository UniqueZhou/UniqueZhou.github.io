<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JS学习总结（一）</title>
      <link href="/passages/JS%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/passages/JS%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h4 id="一，script标签书写位置"><a href="#一，script标签书写位置" class="headerlink" title="一，script标签书写位置"></a>一，script标签书写位置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">js的代码可以分三个地方写:</span><br><span class="line">1.在html的文件中,script的标签中写js代码</span><br><span class="line">2.js代码可以在html的标签中写---</span><br><span class="line">3.在js文件中可以写js代码,但是需要在html的页面中引入 script的标签中的src=&quot;js的路径&quot;</span><br></pre></td></tr></table></figure><h4 id="二，js代码的注意问题"><a href="#二，js代码的注意问题" class="headerlink" title="二，js代码的注意问题"></a>二，js代码的注意问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.在一对script的标签中有错误的js代码,那么该错误的代码后面的js代码不会执行</span><br><span class="line">2.如果第一对的script标签中有错误,不会影响后面的script标签中的js代码执行</span><br><span class="line">3.script的标签中可以写什么内容 type=&quot;text/javascript&quot;是标准写法或者写language=&quot;JavaScript&quot;都可以</span><br><span class="line">但是,目前在我们的html页面中,type和language都可以省略,原因:html是遵循h5的标准</span><br><span class="line"></span><br><span class="line">4.有可能会出现这种情况:script标签中可能同时出现type和language的写法.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5.script标签在页面中可以出现多对</span><br><span class="line">6.script标签一般是放在body的标签的最后的,有的时候会在head标签中,目前讲课的时候都在body标签的后面(body中的最后)</span><br><span class="line">7.如果script标签是引入外部js文件的作用,那么这对标签中不要写任何的js代码,如果要写,重新写一对script标签,里面写代码</span><br></pre></td></tr></table></figure><h4 id="三，变量"><a href="#三，变量" class="headerlink" title="三，变量"></a>三，变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">* 变量:========&gt;</span><br><span class="line">* 操作的数据都是在内存中操作</span><br><span class="line">* js中存储数据使用变量的方式(名字,值---&gt;数据)</span><br><span class="line">* js中声明变量都用var----&gt;存储数据,数据应该有对应的数据类型</span><br><span class="line">* js中的字符串类型的值都用双引号或者单引号</span><br><span class="line">*</span><br><span class="line">* 存储一个数字10</span><br><span class="line">* 变量的声明及赋值</span><br><span class="line">* var num=10;</span><br><span class="line">* 存储一个名字</span><br><span class="line">* var name=&apos;小黑&apos;;</span><br><span class="line"> * 变量---作用,存储数据的或者是操作数据</span><br><span class="line">     *</span><br><span class="line">     * 变量声明(有var 有变量名字,没有值)</span><br><span class="line">     *</span><br><span class="line">     * 变量初始化(有var 有变量名字,有值)</span><br><span class="line">     *</span><br><span class="line">     * 变量声明的方式:</span><br><span class="line">      //var number;//变量的声明,此时是没有赋值的,</span><br><span class="line">    //一次性声明多个变量</span><br><span class="line">    //var x,y,z,k,j;//都是声明,没有赋值</span><br><span class="line"></span><br><span class="line">    //变量的初始化(变量声明的同时并且赋值了)</span><br><span class="line">    //   = 的意义:赋值的含义</span><br><span class="line">    //存储一个数字10</span><br><span class="line">    var number = 10;</span><br><span class="line">    //存储一个5</span><br><span class="line">    var number2 = 5;</span><br><span class="line">    //存储一个人的名字</span><br><span class="line">    var name = &quot;小黑&quot;;</span><br><span class="line">    //存储真(true)</span><br><span class="line">    var flag = true;</span><br><span class="line">    //存储一个null---&gt;相当于是空</span><br><span class="line">    var nll = null;</span><br><span class="line">    //存储一个对象</span><br><span class="line">    var obj = new Object();</span><br><span class="line">     * var 变量名字;</span><br></pre></td></tr></table></figure><h4 id="四，变量总结"><a href="#四，变量总结" class="headerlink" title="四，变量总结"></a>四，变量总结</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">* 变量作用:用来操作数据的(可以存储,可以读取)</span><br><span class="line">    * 变量的声明:没有赋值</span><br><span class="line">    * var 变量名;</span><br><span class="line">    * 变量的初始化:有赋值</span><br><span class="line">    * var 变量名=值;</span><br><span class="line">    *</span><br><span class="line">    * 注意的基本的代码的规范</span><br><span class="line">    * js中声明变量都用var</span><br><span class="line">    * js中的每一行代码结束都应该有分号;(写代码有分号的习惯)</span><br><span class="line">    * js中的大小写是区分的: var N=10; n</span><br><span class="line">    * js中的字符串可以使用单引号,也可以使用双引号,目前我们暂时使用双引号</span><br><span class="line">    *</span><br><span class="line">    * 变量名的注意问题---变量名的命名规范,要遵循驼峰命名法</span><br><span class="line">    * 1.变量的名字要有意义,</span><br><span class="line">    * 2.变量名有一定的规范:一般以字母,$符号,下划线开头,中间或者后面可以有$符号,字母,数字</span><br><span class="line">    * 3.变量名一般都是小写的</span><br><span class="line">    * 4.变量名如果是多个单词,第一个单词的首字母是小写的,后面的所有的单词的首字母都是大写的,这种命名方式称为:驼峰命名法</span><br><span class="line">    * 5.不能使用关键字(系统自带的一些单词,不能使用)</span><br><span class="line">    * 6.不会单词用拼音,拼音也要遵循驼峰命名法</span><br><span class="line">    *</span><br><span class="line">    * var bigNumber=10;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    //声明变量并初始化---变量的初始化----声明变量赋值</span><br><span class="line">    //声明了一个num的变量存储了一个数字100</span><br><span class="line">    //var num=100;</span><br><span class="line">    //输出这个变量的值</span><br><span class="line">    //alert(num);//弹框</span><br><span class="line">    //浏览器的控制台在浏览器中的开发人员工具中(快捷键:F12)的console的选项中</span><br><span class="line">   // console.log(num);//把内容输出在浏览器的控制台中</span><br><span class="line"></span><br><span class="line">    //声明多个变量然后一个一个的赋值</span><br><span class="line">//    var num1,num2,num3;//声明</span><br><span class="line">//    //依次的赋值</span><br><span class="line">//    num1=10;</span><br><span class="line">//    num2=20;</span><br><span class="line">//    num3=30;</span><br><span class="line"></span><br><span class="line">    //声明多个变量并且赋值</span><br><span class="line">    //var num1=10,num2=20,num3=30;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//    var num=10;</span><br><span class="line"></span><br><span class="line">//    var $break=10;</span><br><span class="line"></span><br><span class="line">//    var shuZi=10;</span><br></pre></td></tr></table></figure><h4 id="五，数字交换的三种方式"><a href="#五，数字交换的三种方式" class="headerlink" title="五，数字交换的三种方式"></a>五，数字交换的三种方式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">//变量的交换的第一个思路:使用第三方的变量进行交换</span><br><span class="line">//    var num1=10;</span><br><span class="line">//    var num2=20;</span><br><span class="line">//   //把num1这个变量的值取出来放在temp变量中</span><br><span class="line">//    var temp=num1;</span><br><span class="line">//   //把num2这个变量的值取出来放在num1变量中</span><br><span class="line">//    num1=num2;</span><br><span class="line">//   //把temp变量的值取出来放在num2变量中</span><br><span class="line">//    num2=temp;</span><br><span class="line">//    console.log(num1);//20</span><br><span class="line">//    console.log(num2);//10</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//第二种方式交换:一般适用于数字的交换</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//    var num1 = 10;</span><br><span class="line">//    var num2 = 20;</span><br><span class="line">//    //把num1的变量中的值和num2变量中的值,取出来相加,重新赋值给num1这个变量</span><br><span class="line">//    num1 = num1 + num2;//30</span><br><span class="line">//    //num1变量的值和num2变量的值取出来,相减的结果重新赋值给num2</span><br><span class="line">//    num2 = num1 - num2;//10</span><br><span class="line">//    //num1变量的值和num2变量的值取出来,相减的结果重新赋值给num1</span><br><span class="line">//    num1 = num1 - num2;//20</span><br><span class="line">//    console.log(num1, num2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//Ctrl+Alt+L-----&gt;格式化代码的(设置代码有很好的格式,代码是错误的,这个快捷键是没有效果)</span><br><span class="line"></span><br><span class="line">//注意；变量的名字是不能重名</span><br><span class="line"></span><br><span class="line">//    var num1=10;</span><br><span class="line">//    var num1=20;</span><br><span class="line">//    console.log(num1);</span><br><span class="line"></span><br><span class="line">//扩展的变量的交换:只需要看代码,不需要理解---位运算</span><br><span class="line">var num1 = 10;</span><br><span class="line">var num2 = 20;</span><br><span class="line">num1 = num1 ^ num2;</span><br><span class="line">num2 = num1 ^ num2;</span><br><span class="line">num1 = num1 ^ num2;</span><br><span class="line">console.log(num1, num2);</span><br></pre></td></tr></table></figure><h4 id="六，数据类型"><a href="#六，数据类型" class="headerlink" title="六，数据类型"></a>六，数据类型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">//声明变量并初始化</span><br><span class="line">//    var num=10;</span><br><span class="line">//js中的数据类型有哪些?</span><br><span class="line">//js中的原始数据类型:number,string,boolean,null,undefined,object</span><br><span class="line"> * number:数字类型(整数和小数)</span><br><span class="line"> * string:字符串类型(的值一般都是用单引号或者是双引号括起来)  &quot;34&quot;</span><br><span class="line"> * boolean:布尔类型(值只有两个,true(真1),false(假0))</span><br><span class="line"> * null:空类型,值只有一个:null,一个对象指向为空了,此时可以赋值为null</span><br><span class="line"> * undefined:未定义,值只有一个:undefined</span><br><span class="line"> * 什么情况下的结果是undefined</span><br><span class="line"> * 变量声明了,没有赋值,结果是undefined</span><br><span class="line"> * 函数没有明确返回值,如果接收了,结果也是undefined</span><br><span class="line"> * 如果一个变量的结果是undefined和一个数字进行计算,结果:NaN不是一个数字,也没有意义</span><br><span class="line"> * object:对象----&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//    var num;</span><br><span class="line">//    console.log(num+10);//NaN-----not an number----&gt;不是一个数字</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//    var num;</span><br><span class="line">//    console.log(num);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//如何获取这个变量的数据类型是什么? 使用typeof 来获取</span><br><span class="line">//typeof 的使用的语法</span><br><span class="line"> * 都可以获取这个变量的数据类型是什么!</span><br><span class="line"> * typeof 变量名</span><br><span class="line"> * typeof(变量名)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var num = 10;</span><br><span class="line">var str = &quot;小白&quot;;</span><br><span class="line">var flag = true;</span><br><span class="line">var nll = null;</span><br><span class="line">var undef;</span><br><span class="line">var obj = new Object();</span><br><span class="line">//是使用typeof 获取变量的类型</span><br><span class="line">console.log(typeof num);//number</span><br><span class="line">console.log(typeof str);//string</span><br><span class="line">console.log(typeof flag);//boolean</span><br><span class="line">console.log(String(nll));//是null</span><br><span class="line">console.log(typeof nll);//不是null</span><br><span class="line">console.log(typeof undef);//undefined</span><br><span class="line">console.log(typeof obj);//object</span><br><span class="line">console.log(typeof(num));</span><br><span class="line">//</span><br><span class="line">//</span><br><span class="line">//    console.log(&quot;10&quot;);</span><br><span class="line">//    console.log(10);</span><br></pre></td></tr></table></figure><h4 id="七，数字类型"><a href="#七，数字类型" class="headerlink" title="七，数字类型"></a>七，数字类型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">* 数字类型:number类型</span><br><span class="line">* 无论是整数还是小数都是数字类型</span><br><span class="line">* 不要用小数验证小数</span><br><span class="line">* 不要使用NaN判断是不是NaN，应该使用isNaN(值或者是变量)</span><br><span class="line">* 想要表示十进制:就是正常的数字</span><br><span class="line">* 想要表示八进制:以0开头</span><br><span class="line">* 想要表示十六进制:0x开头</span><br></pre></td></tr></table></figure><h4 id="八，字符串类型"><a href="#八，字符串类型" class="headerlink" title="八，字符串类型"></a>八，字符串类型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">//var str=&quot;10&quot;;//字符串</span><br><span class="line">    //var str2=&apos;20&apos;;//字符串</span><br><span class="line"></span><br><span class="line">    //字符串可以使用单引号,也可以使用双引号</span><br><span class="line"></span><br><span class="line">    //字符串的长度如何获取? 变量名.length</span><br><span class="line"></span><br><span class="line">    //    var str=&quot;what are you no sha lei&quot;;</span><br><span class="line">    //    //字符串的个数有多少个?这个字符串的长度是多少</span><br><span class="line">    //    console.log(str.length);</span><br><span class="line">    //</span><br><span class="line">    //    var str1=&quot;fdshfjworwoijpfskj;akjfpojfiwnmoiwajdoiwajiwaewowj&quot;;</span><br><span class="line">    //    console.log(str1.length);</span><br><span class="line"></span><br><span class="line">    //html中的转义符: &lt;  &amp;lt; &gt; &amp;gt; 空格: &amp;nbsp;</span><br><span class="line">    //js中的字符串里也有转义符</span><br><span class="line"></span><br><span class="line">    //tab键----水平制表符</span><br><span class="line">    //    console.log(&quot;哈哈\\嘎嘎&quot;);</span><br><span class="line">    //    console.log(&quot;哈哈\t嘎嘎&quot;);</span><br><span class="line">    //    console.log(&quot;哈哈\&quot;嘎嘎&quot;);</span><br><span class="line">    //</span><br><span class="line">    //</span><br><span class="line">    //    console.log(&apos;哈哈\&apos;嘎嘎&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //字符串的拼接: 使用+可以把多个字符串放在一起形成一个字符串</span><br><span class="line">    //只要有一个是字符串,其他的是数字,那么结果也是拼接,不是相加</span><br><span class="line">    //如果有一个是字符串,另一个不是字符串,使用- 号,此时会发生计算</span><br><span class="line">    //    var str1=&quot;您好&quot;;</span><br><span class="line">    //    var str2=&quot;我好&quot;;</span><br><span class="line">    //    console.log(str1+str2);</span><br><span class="line"></span><br><span class="line">    //console.log(&quot;哈哈&quot;+&quot;嘎嘎&quot;+&quot;嘿嘿&quot;);</span><br><span class="line">    //    var str1=&quot;10&quot;;</span><br><span class="line">    //    var str2=&quot;20&quot;;</span><br><span class="line">    //    console.log(str1+str2);</span><br><span class="line"></span><br><span class="line">    //    var str1=&quot;10&quot;;</span><br><span class="line">    //    var str2=20;</span><br><span class="line">    //    console.log(str1+str2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//    var str1 = &quot;10&quot;;</span><br><span class="line">//    var str2 = 5;</span><br><span class="line">//    //浏览器帮助我们自动的把字符串类型转成了数字类型,这种方式叫:隐式转换</span><br><span class="line">//    console.log(str1-str2);</span><br><span class="line"></span><br><span class="line">//    var str1=&quot;10&quot;;</span><br><span class="line">//    var str2=5;</span><br><span class="line">//    console.log(str1*str2);</span><br></pre></td></tr></table></figure><h4 id="九，布尔类型"><a href="#九，布尔类型" class="headerlink" title="九，布尔类型"></a>九，布尔类型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//布尔类型:的值有两个,一个是true(真),一个是false(假)</span><br><span class="line"></span><br><span class="line">//    var flag=1;</span><br><span class="line">//    console.log(flag);</span><br><span class="line"></span><br><span class="line">//    var fdf=null;</span><br><span class="line">//</span><br><span class="line">//    var num=0;</span><br></pre></td></tr></table></figure><h4 id="十，类型转换"><a href="#十，类型转换" class="headerlink" title="十，类型转换"></a>十，类型转换</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">//其他类型转数字类型:三种方式:</span><br><span class="line">    //1.parseInt();//转整数</span><br><span class="line"></span><br><span class="line">    //    console.log(parseInt(&quot;10&quot;));//10</span><br><span class="line">    //    console.log(parseInt(&quot;10afrswfdsf&quot;));//10</span><br><span class="line">    //    console.log(parseInt(&quot;g10&quot;));//NaN</span><br><span class="line">    //    console.log(parseInt(&quot;1fds0&quot;));//1</span><br><span class="line">    //    console.log(parseInt(&quot;10.98&quot;));//10</span><br><span class="line">    //    console.log(parseInt(&quot;10.98fdsfd&quot;));//10</span><br><span class="line"></span><br><span class="line">    //2.parseFloat()//转小数</span><br><span class="line"></span><br><span class="line">    //    console.log(parseFloat(&quot;10&quot;));//10</span><br><span class="line">    //    console.log(parseFloat(&quot;10afrswfdsf&quot;));//10</span><br><span class="line">    //    console.log(parseFloat(&quot;g10&quot;));//NaN</span><br><span class="line">    //    console.log(parseFloat(&quot;1fds0&quot;));//1</span><br><span class="line">    //    console.log(parseFloat(&quot;10.98&quot;));//10.98</span><br><span class="line">    //    console.log(parseFloat(&quot;10.98fdsfd&quot;));//10.98</span><br><span class="line">    //3.Number();//转数字</span><br><span class="line">//    console.log(Number(&quot;10&quot;));//10</span><br><span class="line">//    console.log(Number(&quot;10afrswfdsf&quot;));//NaN</span><br><span class="line">//    console.log(Number(&quot;g10&quot;));//NaN</span><br><span class="line">//    console.log(Number(&quot;1fds0&quot;));//NaN</span><br><span class="line">//    console.log(Number(&quot;10.98&quot;));//10.98</span><br><span class="line">//    console.log(Number(&quot;10.98fdsfd&quot;));//NaN</span><br><span class="line"></span><br><span class="line">    //总结:想要转整数用parseInt(),想要转小数用parseFloat()</span><br><span class="line">    //想要转数字:Number();要比上面的两种方式严格</span><br><span class="line"></span><br><span class="line">    //其他类型转字符串类型</span><br><span class="line">    //1    .toString()</span><br><span class="line"></span><br><span class="line">//    var num=10;</span><br><span class="line">//    console.log(num.toString());//字符串类型</span><br><span class="line">//    //2  String();</span><br><span class="line">//</span><br><span class="line">//    var num1=20;</span><br><span class="line">//    console.log(String(num1));</span><br><span class="line"></span><br><span class="line">    //如果变量有意义调用.toString()使用转换</span><br><span class="line">    //如果变量没有意义使用String()转换</span><br><span class="line"></span><br><span class="line">//    var num2;</span><br><span class="line">//    console.log(num2.toString());</span><br><span class="line">//    var num3=null;</span><br><span class="line">//    console.log(num3.toString());</span><br><span class="line"></span><br><span class="line">    //这个可以</span><br><span class="line">//    var num2;</span><br><span class="line">//    console.log(String(num2));</span><br><span class="line">//    var num3=null;</span><br><span class="line">//    console.log(String(num3));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //其他类型转布尔类型</span><br><span class="line"></span><br><span class="line">    //1  Boolean(值);</span><br><span class="line">//</span><br><span class="line">//    console.log(Boolean(1));//true</span><br><span class="line">//    console.log(Boolean(0));//false</span><br><span class="line">//    console.log(Boolean(11));//true</span><br><span class="line">//    console.log(Boolean(-10));//true</span><br><span class="line">//    console.log(Boolean(&quot;哈哈&quot;));//true</span><br><span class="line">//    console.log(Boolean(&quot;&quot;));//false</span><br><span class="line">//    console.log(Boolean(null));//false</span><br><span class="line">//    console.log(Boolean(undefined));//false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//    var str=10;</span><br><span class="line">//    console.log(+str);</span><br></pre></td></tr></table></figure><h4 id="十一，操作符"><a href="#十一，操作符" class="headerlink" title="十一，操作符"></a>十一，操作符</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">* 操作符:一些符号-----用来计算</span><br><span class="line">     *</span><br><span class="line">     * 算数运算符:  +  -  * / %</span><br><span class="line">     * 算数运算表达式:由算数运算符连接起来的表达式</span><br><span class="line">     * 一元运算符: 这个操作符只需要一个操作数就可以运算的符号  ++  --</span><br><span class="line">     * 二元运算符: 这个操作符需要两个操作数就可以运算,</span><br><span class="line">     * 三元运算符: -----不讲,明天讲</span><br><span class="line">     * 复合运算符: +=  -=  *= /= %=</span><br><span class="line">     * 复合运算表达式:由复合运算符连接起来的表达式</span><br><span class="line">     *</span><br><span class="line">     * var num=10;</span><br><span class="line">     * num+=10;------&gt;就是:num=num+10;</span><br><span class="line">     * console.log(num);20</span><br><span class="line">     *</span><br><span class="line">     *</span><br><span class="line">     * 关系运算符: &gt;  &lt;  &gt;=  &lt;=  ==不严格的 ===严格的 !=不严格的不等 !==严格的不等</span><br><span class="line">     * 关系运算表达式:由关系运算符连接起来的表达式</span><br><span class="line">     * 关系运算表达式的结果是布尔类型</span><br><span class="line">     * 逻辑运算符:</span><br><span class="line">     * &amp;&amp;---逻辑与--并且</span><br><span class="line">     * ||---逻辑或---或者</span><br><span class="line">     * !---逻辑非---取反--取非</span><br><span class="line">     * 逻辑运算表达式:由逻辑运算符连接起来的表达式</span><br><span class="line">     * 表达式1&amp;&amp;表达式2</span><br><span class="line">     * 如果有一个为false,整个的结果就是false</span><br><span class="line">     * 表达式1||表达式2</span><br><span class="line">     * 如果有一个为true,整个的结果为true</span><br><span class="line">     * !表达式1</span><br><span class="line">     * 表达式1的结果是true,整个结果为false</span><br><span class="line">     * 表达式1的结果是false,整个结果为true</span><br><span class="line">     *</span><br><span class="line">     * 赋值运算符:  =</span><br><span class="line">     *</span><br><span class="line">     *</span><br><span class="line">     *</span><br><span class="line">     *</span><br><span class="line"> </span><br><span class="line">    //    var num1=10;</span><br><span class="line">    //    var num2=20;</span><br><span class="line">    //</span><br><span class="line">    //    console.log(num1==num2&amp;&amp;5&gt;6);</span><br><span class="line"></span><br><span class="line">    //    var num=20;</span><br><span class="line">    //    console.log(num&gt;10||5&lt;0);</span><br><span class="line"></span><br><span class="line">    //    var flag=false;</span><br><span class="line">    //    console.log(!flag);</span><br><span class="line"></span><br><span class="line">    //    var num=10;</span><br><span class="line">    //    var sum=(num+10)*5;</span><br><span class="line">    //    console.log(sum);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //    var result = (4 &gt;= 6 || &apos;人&apos; != &apos;狗&apos; &amp;&amp; !(12 * 2 == 144) &amp;&amp; true);</span><br><span class="line">    //    console.log(result);</span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">//    var num = 10;</span><br><span class="line">//</span><br><span class="line">//    var result2 =( 5 == num / 2 &amp;&amp; (2 + 2 * num).toString() === &apos;22&apos;);</span><br><span class="line">//    console.log(result2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //    var num=20;</span><br><span class="line">    //    var result=num/3;//num变量与3取余---&gt;10/3的余数</span><br><span class="line">    //    console.log(parseInt(result));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //    var num=20;</span><br><span class="line">    //    var result=num%3;//num变量与3取余---&gt;10/3的余数</span><br><span class="line">    //    console.log(result);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //    var num=10;</span><br><span class="line">    //    var sum=(num+10)+10;</span><br><span class="line"></span><br><span class="line">    //    var num = 20;</span><br><span class="line">    //    num %= 5;</span><br><span class="line">    //    //    num=num-5;</span><br><span class="line">    //    console.log(num);</span><br><span class="line"></span><br><span class="line">    //    var str=&quot;5&quot;;</span><br><span class="line">    //    var num=5;</span><br><span class="line">    //    console.log(str===num);</span><br><span class="line"></span><br><span class="line">    //    console.log(5&gt;10);//false</span><br><span class="line">    //    console.log(5&gt;=5);//true</span><br><span class="line">    //    console.log(5&gt;3);//true</span><br><span class="line">    //    console.log(5==10);//false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //字面量: 把一个值直接赋值给一个变量</span><br><span class="line"></span><br><span class="line">    //声明变量并初始化</span><br><span class="line">//    var num=10;</span><br><span class="line">//</span><br><span class="line">//    var flag=true;</span><br><span class="line">//</span><br><span class="line">//    var str=&quot;哈哈哈&quot;;</span><br><span class="line">//</span><br><span class="line">//    var y=10;</span><br><span class="line">//    var n=y;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建完整流程</title>
      <link href="/passages/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B/"/>
      <url>/passages/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="一，准备工作"><a href="#一，准备工作" class="headerlink" title="一，准备工作"></a>一，准备工作</h2><h5 id="1-了解Hexo"><a href="#1-了解Hexo" class="headerlink" title="1.了解Hexo"></a>1.了解Hexo</h5><p><a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">Hexo</a>是高效的静态站点生成框架，它基于Node.js。 通过 Hexo 你可以使用Markdown 编写文章。</p><h5 id="2-搭建Node-js环境"><a href="#2-搭建Node-js环境" class="headerlink" title="2.搭建Node.js环境"></a>2.搭建Node.js环境</h5><p>搭建博客网站首先需要安装Node.js环境。</p><p>下载地址：<a href="http://nodejs.cn/download" target="_blank" rel="noopener">http://nodejs.cn/download</a> </p><p>测试安装：命令行使用<code>node -v</code> 、<code>npm -v</code>，查看显示版本号即成功。</p><blockquote><p>Ps:大部分同学装的node版本是之前提供的5.0.0多的 hexo的初始化步骤中会出现报错，需要重新装最新的版本（10.0.0多的）</p></blockquote><h5 id="3-安装Hexo博客框架工具"><a href="#3-安装Hexo博客框架工具" class="headerlink" title="3.安装Hexo博客框架工具"></a>3.安装Hexo博客框架工具</h5><p>Hexo是一个建站工具，可以帮助我们快速生成基本的博客文件，安装它需要在控制台下（Windows+R+<code>cmd</code>）使用如下命令：</p><p><code>npm install hexo-cli -g</code></p><h5 id="4-安装Git版本工具"><a href="#4-安装Git版本工具" class="headerlink" title="4.安装Git版本工具"></a>4.安装Git版本工具</h5><p>Git是目前世界上最流行的分布式版本控制系统</p><p>使用Git可以帮助我们把本地的网页和文章等内容提交到Github上，实现同步。 </p><p>下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a>  </p><p>测试安装:右击鼠标，如果有</p><p><code>Git GUI here</code></p><p><code>Git Bash here</code></p><p>两个选项 即安装成功。</p><h5 id="5-注册Github账号"><a href="#5-注册Github账号" class="headerlink" title="5.注册Github账号"></a>5.注册Github账号</h5><p>gitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。这里用到Github，是因为我们需要通过Github得到自己的博客网站域名，而且需要使用gitHub同步我们个人博客的相关文件。 </p><p> 注册地址：<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a> </p><h2 id="二，开始搭建博客"><a href="#二，开始搭建博客" class="headerlink" title="二，开始搭建博客"></a>二，开始搭建博客</h2><h5 id="1-开启Github服务"><a href="#1-开启Github服务" class="headerlink" title="1.开启Github服务"></a>1.开启Github服务</h5><p>通过Github Pages获得一个免费使用的域名，这需要我们在Github上新建一个仓库，如下：</p><p><img src="/passages/Hexo博客搭建完整流程/p1.png" alt></p><blockquote><p>注意：新仓库的名字，最好是</p><p>UserName+“github.io”`</p><p>的形式。这也是之前强调的要起一个好的用户名的原因。这样之后我们最后的博客网站的链接就会是：<a href="https://UserName.github.io的形式。" target="_blank" rel="noopener">https://UserName.github.io的形式。</a></p></blockquote><p>点击<code>Create Repository</code>之后，随后选择<code>Setting</code>进入设置，找到<code>Github Pages</code>如下：</p><p><img src="/passages/Hexo博客搭建完整流程/p2.png" alt></p><p>这里我们需要点击<code>Choose a theme</code>任意选择一个选择主题，然后界面会跳转到仓库，我们看到有两个文件如下：</p><p><img src="/passages/Hexo博客搭建完整流程/p3.png" alt></p><p>再查看<code>setting</code>，我们会看到开启GitHub Pages之后得到的域名如下：</p><p><img src="/passages/Hexo博客搭建完整流程/p4.png" alt></p><p>现在，可以使用</p><p><a href>https://UserName.github.io</a></p><p>访问自己的博客网站了，打开链接我们会看到默认主题的个人博客样式如下(虽然点丑)：</p><p><img src="/passages/Hexo博客搭建完整流程/p5.png" alt></p><h5 id="2-创建本地博客站点"><a href="#2-创建本地博客站点" class="headerlink" title="2.创建本地博客站点"></a>2.创建本地博客站点</h5><p>上述的步骤相当于我们使用Github，创建了一个默认的博客页，并且得到了一个可外部访问的域名。但是这个博客页很丑。我们的目的是创建自己个性化的博客网站，所以我们使用Hexo在本地先创建一个本地博客站点，优化后再把它部署到github上。接下来我们使用控制台(Windows+R+<code>cmd</code>)命令在本地一个合适的位置右键<code>git bash here</code></p><p>输入<code>hexo init blog</code></p><p>创建博客站点文件夹如下：</p><p><img src="/passages/Hexo博客搭建完整流程/p6.png" alt></p><p>测试本地博客站点，进入blog文件夹（此即为本地博客根目录）右键<code>git bash here</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g //g是generetor的缩写，生成博客 </span><br><span class="line">hexo s //s是server的缩写，启动本地服务</span><br></pre></td></tr></table></figure><p>此时打开浏览器，输入 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，我们将会看到Hexo自带默认主题显示的博客样式如下:</p><p><img src="/passages/Hexo博客搭建完整流程/p7.png" alt></p><h5 id="3-同步Github，允许公共访问"><a href="#3-同步Github，允许公共访问" class="headerlink" title="3.同步Github，允许公共访问"></a>3.同步Github，允许公共访问</h5><blockquote><p>初次安装git需要配置用户名和邮箱，否则git会提示：</p><p>please tell me who you are.</p></blockquote><p>你需要运行命令来配置你的用户名和邮箱：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;name&quot;</span><br><span class="line">$ git config --global user.email &quot;email&quot;</span><br></pre></td></tr></table></figure><blockquote><p>注意：（引号内请输入你自己设置的名字，和你自己的邮箱）此用户名和邮箱是git提交代码时用来显示你身份和联系方式的，并不是github用户名和邮箱</p></blockquote><h5 id="4-Git配置ssh-key"><a href="#4-Git配置ssh-key" class="headerlink" title="4.Git配置ssh key"></a>4.Git配置ssh key</h5><p>在博客站点右键<code>Git bash here</code></p><p>输入<code>$  ssh-keygen -t rsa -C &quot;youremail&quot;</code></p><p>第一次生成的话，直接一路回车，不需要输入密码。不是第一次生成的话，会提示 overwrite (y/n)? 问你是否覆盖旧的 SSH Key ，直接填 y ，然后一直回车就行了，最后得到了两个文件：</p><p><strong>id_rsa和id_rsa.pub</strong>。</p><p><img src="/passages/Hexo博客搭建完整流程/p8.png" alt></p><p>记事本打开/C/Users/Administrator/.ssh/id_rsa.pub文件</p><p>复制该段信息；登录github账户，点击头像进入</p><p>Settings -&gt; SSH and GPG keys -&gt; New SSH key</p><p>将复制的信息粘贴到该处。</p><p><img src="/passages/Hexo博客搭建完整流程/p9.png" alt></p><p>测试是否成功</p><p><code>$ssh -T git@github.com</code></p><p>提示</p><p><code>Hi xxx! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></p><p>说明添加成功。</p><h5 id="5-部署博客"><a href="#5-部署博客" class="headerlink" title="5.部署博客"></a>5.部署博客</h5><p>在本地我们已经搭建了博客，但是还只能自己本地访问。若要别人也能看到，那就需要我们将其同步部署到GitHub上了。首先找到我们的博客仓库，并拷贝仓库地址：</p><p><img src="/passages/Hexo博客搭建完整流程/p10.png" alt></p><blockquote><p>注意：只需复制用户名之后字段</p></blockquote><p>然后修改本地博客目录的配置：<br>修改本次博客根目录下的<code>_config.yml</code>文件，修改<code>deploy</code>下的配置如下：</p><p><img src="/passages/Hexo博客搭建完整流程/p11.png" alt></p><blockquote><p>注意空格和单词不可以打错</p></blockquote><p>之后执行Git bash here命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git //安装部署插件</span><br><span class="line">hexo d //部署到github</span><br></pre></td></tr></table></figure><p>再次访问链接：<a href>https://userName.github.io</a>，就会发现这里的界面和本地的一样了。如此一来我们搭建的个人博客网站就基本完成了。</p><h2 id="三，发布博客"><a href="#三，发布博客" class="headerlink" title="三，发布博客"></a>三，发布博客</h2><h5 id="1-发布"><a href="#1-发布" class="headerlink" title="1.发布"></a>1.发布</h5><p>可以发布自己的第一篇博客了。来尝试一下以下的步骤：<br>在本地博客文件夹根目录(git bash here)输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;我个人博客的第一篇博客&quot; </span><br><span class="line">hexo g //生成网页 </span><br><span class="line">hexo d //部署到远端(github)</span><br></pre></td></tr></table></figure><p>生成的博客md文件会存放在<code>blog\source\_posts</code>文件夹内。</p><p>现在打开我们的博客网站：</p><p><a href="http://username.github.io/" target="_blank" rel="noopener">http://UserName.github.io</a></p><p>会看到网页</p><p>（显示可能有延迟 所以可以采用以下方法(git bash)：</p><p> hexo clean <em>//清理缓存</em> </p><p>hexo g <em>//重新生成博客代码</em> </p><p>hexo d <em>//部署到服务器</em></p><blockquote><p>可以用<code>hexo s</code>先查看本地情况再部署到服务器</p></blockquote><h5 id="2-Markdown写作语法"><a href="#2-Markdown写作语法" class="headerlink" title="2.Markdown写作语法"></a>2.Markdown写作语法</h5><p>推荐使用<code>Typora</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"># 写作介绍</span><br><span class="line">## 1，字体介绍</span><br><span class="line">*这是斜体* 或 _这也是斜体_ </span><br><span class="line">**这是粗体**</span><br><span class="line">***这是加粗斜体***</span><br><span class="line">~~这是删除线~~</span><br><span class="line">## 2，分级标题</span><br><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br><span class="line">## 3，超链接</span><br><span class="line">写法：</span><br><span class="line"></span><br><span class="line">## 4,列表</span><br><span class="line">无序列表：</span><br><span class="line">写法：</span><br><span class="line"></span><br><span class="line">* 无序列表项1</span><br><span class="line">+ 无序列表项2</span><br><span class="line">- 无序列表项3</span><br><span class="line"></span><br><span class="line">有序列表：</span><br><span class="line">写法：</span><br><span class="line">1.有序列表项1</span><br><span class="line">2.有序列表项2</span><br><span class="line">3.有序列表项3</span><br><span class="line"></span><br><span class="line">## 5，插入图片</span><br><span class="line">在 Hexo 中插入图片，首先需要将图片放在 source/img/ 文件夹下，然后如下方式进行插入：</span><br><span class="line"></span><br><span class="line">![](url)</span><br><span class="line"></span><br><span class="line">## 6，表格</span><br><span class="line">| 表头1|表头2|表头3|表头4</span><br><span class="line">|-| :- | :-: | -: |</span><br><span class="line">|默认左对齐|左对齐|居中对其|右对齐|</span><br><span class="line">|默认左对齐|左对齐|居中对其|右对齐|</span><br><span class="line">|默认左对齐|左对齐|居中对其|右对齐|</span><br></pre></td></tr></table></figure><h2 id="四，更换主题"><a href="#四，更换主题" class="headerlink" title="四，更换主题"></a>四，更换主题</h2><p>为了让它看起来更美观一些，我们可以为其更换主题（当然也可以自己在默认主题下自己编写美化博客界面）。这里以使用github上的next主题为例</p><h5 id="1-下载主题"><a href="#1-下载主题" class="headerlink" title="1.下载主题"></a>1.下载主题</h5><p>切换到本地博客根目录下(git bash here)输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>下载成之后我们会看到next的主题已经存在thems里了如下：</p><p><img src="/passages/Hexo博客搭建完整流程/p12.png" alt></p><h5 id="2-修改博客配置文件，更换主题配置"><a href="#2-修改博客配置文件，更换主题配置" class="headerlink" title="2.修改博客配置文件，更换主题配置"></a>2.修改博客配置文件，更换主题配置</h5><p>修改博客根目录(不是next主题)下的<code>_config.yml</code>文件，搜索theme字段，并将其值修改为next</p><p><img src="/passages/Hexo博客搭建完整流程/p13.png" alt></p><p>然后在控制台（git bash）下输入如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean //清理缓存</span><br><span class="line">hexo g //重新生成博客代码 </span><br><span class="line">hexo d //部署到服务器</span><br></pre></td></tr></table></figure><p>再次打开我们的博客网站<a href>https://UserName.github.io</a>，将会看到更换的主题</p><p><img src="/passages/Hexo博客搭建完整流程/p14.png" alt></p><h2 id="主题美化后续更新……"><a href="#主题美化后续更新……" class="headerlink" title="主题美化后续更新……"></a><strong><em>主题美化后续更新……</em></strong></h2>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo搭建微博 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
